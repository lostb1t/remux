name: Build Mobile

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos
            runner: macos-latest
            platform: ios
            target: aarch64-apple-ios
          - os: linux
            runner: ubuntu-latest
            platform: android
            target: aarch64-linux-android
    steps:
      - name: Set up JDK 17
        if: matrix.platform == 'android'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Setup Android SDK
        if: matrix.platform == 'android'
        uses: android-actions/setup-android@v3

      - name: Setup bundletool
        uses: amyu/setup-bundletool@v1

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform }}

      - name: Install cargo-binstall
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pwsh -Command "Set-ExecutionPolicy Unrestricted -Scope Process; iex (iwr 'https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.ps1').Content"
          else
            curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          fi

      - name: Install Dioxus CLI
        run: |
          cargo binstall --force --no-confirm dioxus-cli@0.7.0-alpha.3

      - name: Build app
        if: matrix.platform == 'android'
        run: |
          dx build --release --platform ${{ matrix.platform }} --trace --target ${{ matrix.target }}

      - name: Build app
        if: matrix.platform == 'ios'
        run: |
          dx bundle --release --platform ${{ matrix.platform }} --trace --target ${{ matrix.target }}

      - name: Prepare artifact (Android)
        if: matrix.platform == 'android'
        run: |
          mkdir -p artifacts
          find target/dx/remux/release/android/app/ -type f -name "*.apk" -exec cp {} artifacts/ \;
      
      - name: Prepare artifact (ios)
        if: matrix.platform == 'ios'
        run: |
          mkdir -p artifacts
          cd dist/
          mkdir -p Payload
          cp -r Remux.app Payload/
          zip -r Remux.ipa Payload
          cp Remux.ipa artifacts/
          

      - name: Upload platform artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-package
          path: artifacts/*

  release:
    name: Upload to GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          merge-multiple: true

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly Build
          prerelease: true
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}